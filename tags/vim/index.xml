<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on fgg blog</title><link>/tags/vim/</link><description>fgg blog (Vim)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 13 Aug 2022 21:37:59 +0800</lastBuildDate><atom:link href="/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>利器4: Vim 编辑器 -- 只因为在键盘之中，方向键太遥远</title><link>/posts/thecli/thevim/2022-08-13-vim8/</link><pubDate>Sat, 13 Aug 2022 21:37:59 +0800</pubDate><guid>/posts/thecli/thevim/2022-08-13-vim8/</guid><description>&lt;h2 id="vim-初体验" >
&lt;div>
&lt;a href="#vim-%e5%88%9d%e4%bd%93%e9%aa%8c">
#
&lt;/a>
Vim 初体验
&lt;/div>
&lt;/h2>
&lt;p>“多年以后，面对显示屏，&amp;ldquo;逃离了巨硬·仍旧愤怒·懵懂菜鸟&amp;quot;将会回想起初次尝试 Vim 编辑器
而被困在里面叫天不应叫地不灵的那个遥远的下午”。&lt;/p>
&lt;p>那时候的我（2017），是个二十多岁的青年，刚刚认识终端和 Linux 大概是怎么一回事，
感觉恰似上天给我关了那扇“窗”，自己推开了 Linux 世界的大门。
世界新生伊始，许多事物还不知其名何处，对许多“拿来主义”的命令仍旧半信半疑，
简直就是一场大冒险 (没有性命之攸的那种)。&lt;/p>
&lt;p>当我发现在文本编辑器里的光标可以用 h,j,k,l 来进行左下上右移动时，“不懂，但我大受震撼”。&lt;/p>
&lt;p>（其实就是见识少，不是所有键盘都有独立的方向键，更不是操作系统就只一个 windows
，不过我是二十好几的人了才知道这个事情，用于连的话讲就是：“啊，这是一场侮辱”。）&lt;/p>
&lt;p>虽然第一次尝试 Vim 就被抛弃到了荒岛，好在我对这样一个新奇的世界，早有心理准备。
事实证明，要适应新环境，最好的武器不过是“一点好奇心和多点耐心”。从那以后，
感觉就好像“居住在兔子皮毛深处的微生物”竭力向毛尖爬去，“以便将魔术师看个清楚”。&lt;/p>
&lt;p>终端里能用的优秀工具多得让我觉得简直“就像是在海边拣贝壳的孩子&amp;rdquo;，而 Vim 编辑器无疑是我最喜爱的那一枚。
而在海边放贝壳的无疑是那些乐于分享的同道中人，我相信真正的进步来自于分享。&lt;/p>
&lt;p>后来当我大概明白 vimrc 文件是怎么一回事之后，我第一件事就是给它加上了这一句:&lt;/p>
&lt;p>&lt;code>set mouse=&lt;/code>&lt;/p>
&lt;p>其实当时是怀着对旧日那种凡事必得“鼠标点击拖拽”宣战的忐忑心态。&lt;/p>
&lt;p>后来怎么样了？&lt;/p>
&lt;p>后来我发现，其实不怎么需要“专门腾出一只手用鼠标操控”。
如果是在终端干活，你乐意的话，那就是：根本不需要。
如果你极端点，在哪里都不需要鼠标。
除非是你另一只手在忙点别的什么，或者是老板要“麻烦”你给“赶紧”修改一篇work文档，客户在线等那种&amp;hellip;&lt;/p>
&lt;h2 id="vim-编辑器" >
&lt;div>
&lt;a href="#vim-%e7%bc%96%e8%be%91%e5%99%a8">
#
&lt;/a>
Vim 编辑器
&lt;/div>
&lt;/h2>
&lt;h3 id="vim-是干啥的" >
&lt;div>
&lt;a href="#vim-%e6%98%af%e5%b9%b2%e5%95%a5%e7%9a%84">
##
&lt;/a>
Vim 是干啥的
&lt;/div>
&lt;/h3>
&lt;p>首先应该了解： Vim 适用于什么场景？&lt;/p>
&lt;blockquote>
&lt;p>“Vim是从 vi 发展出来的一个文本编辑器。
其代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。
和Emacs并列成为类Unix系统用户最喜欢的编辑器。”&lt;/p>
&lt;/blockquote>
&lt;p>平时我在浏览中（尤其是寻找一些功能插件过程）也看到有人发博客说他/她是用 Vim 进
行“写作”的（主要是关于 $\LaTeX$, $\TeX$, markdown 的插件），但我想如果是用来进
行文学创作这一类的工作的话，重点可能不在于编辑器，很简单，还没有“电脑”的时代就
已经诞生了太多优秀作品。
（想象大佬曹雪芹面对电脑屏幕“十年删改”《红楼梦》总觉得有点荒诞，
但是就算是有电脑，这难点肯定不在于删改（编辑器无关紧要），而在于文学创造。
极有可能他根本买不起电脑。）&lt;/p>
&lt;p>反过来却不一样，至少我们这年代，没有听说哪个成功的软件产品，它的代码是用手写在草稿纸上 &amp;hellip;
怪诞的是，面试的时候倒是有不少这种要手写代码啊伪代码这种事情，我觉得这多多少少有点黑色幽默。&lt;/p>
&lt;p>简而言之，vim是个编辑器，很多人用它来写代码，也有人用它来干其他。&lt;/p>
&lt;p>随着了解深入，慢慢就会接触到诸如“编辑器之战”、“编程语言之争”这一类话题。&lt;/p>
&lt;h3 id="编辑器之战" >
&lt;div>
&lt;a href="#%e7%bc%96%e8%be%91%e5%99%a8%e4%b9%8b%e6%88%98">
##
&lt;/a>
编辑器之战
&lt;/div>
&lt;/h3>
&lt;blockquote>
&lt;p>“编辑器之战是指计算机编程领域内，
两类文本编辑器 vi（以及衍生版本）和 Emacs 用户之间的对抗冲突。
这已经成为黑客文化和自由软件社区文化的一部分。&lt;/p>
&lt;/blockquote>
&lt;p>一些 Emacs 用户说：&lt;/p>
&lt;blockquote>
&lt;p>Vi 有两个模式，“不停地哔哔叫”和“搞砸一切”。&lt;/p>
&lt;/blockquote>
&lt;p>而据 Vi 用户称：&lt;/p>
&lt;blockquote>
&lt;p>一些 Emacs 用户由于修改键过多而使用脚踏板。&lt;/p>
&lt;/blockquote>
&lt;p>一些博客博文、影视作品也都会出现这些内容场景，而且大都是轻松欢乐的场景。比如，
《硅谷》里理查德和他“简直就是踩了狗屎运”才勾搭上的漂亮女友就为了 Vim 和 Emacs
、使用 Tab 还是 Space 进行代码缩进以及缩进风格而吵了起来，继而直接闹掰，
最后以理查德秀逗了的在用身体力行进行“缩进演示”中滚下楼梯而告终。
&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>战火在两群用户之间多次点燃，他们互相蔑视，坚信自己的选择才是最完美的。
相比其他的IT领域战争（浏览器大战、操作系统之争、编程语言之争、代码缩进风格之战
等等)，编辑器的选择其实通常只是个人问题。 ”&lt;/p>
&lt;/blockquote>
&lt;p>如果不小心也卷入了这些战争，请记住：编辑器的选择其实通常只是个人问题。&lt;/p>
&lt;p>当然，实在吵得不可开交的时候，别忘了搬出编程语言之争里那句一锤定音的话题终结语：
“PHP 才是真好的编程语言，不接受任何反驳。”&lt;/p>
&lt;p>如果想了解更多，可以去 &lt;a href="https://zh.m.wikipedia.org/zh-hans/Vim">Vim 维基词条&lt;/a>
了解更多精彩内容。如果你甚至无法访问维基百科，那不是你的错，不过你得想办法。&lt;/p>
&lt;h2 id="vim-及其配置" >
&lt;div>
&lt;a href="#vim-%e5%8f%8a%e5%85%b6%e9%85%8d%e7%bd%ae">
#
&lt;/a>
vim 及其配置
&lt;/div>
&lt;/h2>
&lt;p>如果你是想入门而还在门口徘徊的，可以先在终端 (Terminal) 里输入 &lt;code>vimtutor&lt;/code>，
然后看看你感觉如何。如果你认真追随，你会发现一切自有道理。貌似还挺好玩。
嗯，咦，怎么退出这编辑器呢？&lt;/p>
&lt;h3 id="现代码仔如何在终端界面退出vim编辑器" >
&lt;div>
&lt;a href="#%e7%8e%b0%e4%bb%a3%e7%a0%81%e4%bb%94%e5%a6%82%e4%bd%95%e5%9c%a8%e7%bb%88%e7%ab%af%e7%95%8c%e9%9d%a2%e9%80%80%e5%87%bavim%e7%bc%96%e8%be%91%e5%99%a8">
##
&lt;/a>
现代码仔如何在终端界面退出vim编辑器
&lt;/div>
&lt;/h3>
&lt;p>如果你和我当初一样一头雾水&amp;hellip; 淡定淡定，输入 &lt;code>:q&lt;/code> ，按下 &lt;code>Enter&lt;/code> 即可退出。&lt;/p>
&lt;p>嗯，如果你正在输入，需要先按下 &lt;code>Esc&lt;/code>，然后输入 &lt;code>:q&lt;/code> 来退出。&lt;/p>
&lt;p>这个操作也不好使？八成你是在别的模式里，比如 &lt;code>Ex mode&lt;/code>，
八成它也会提示你输入 &lt;code>visual&lt;/code> 来返回到 &lt;code>normal mode&lt;/code>。&lt;/p>
&lt;p>如果不是这种情况，极有可能是你不小心按了 &lt;code>q&lt;/code> 进入命令录制，
通常要是你多按几次 &lt;code>q&lt;/code> 来观察，会发现有 &lt;code>recording @&lt;/code> 的提示，
这就是多命令录制无疑，重复操作：输入 &lt;code>:q&lt;/code> ，按下 &lt;code>Enter&lt;/code> 即可退出。&lt;/p>
&lt;p>如果都不是，并且“他X的按什么也没用”，先检查一下你的机器是否还在正常工作，
是，则重复以下操作：输入 &lt;code>:q&lt;/code>，按下 &lt;code>Enter&lt;/code>。&lt;/p>
&lt;p>如果你所有好奇心还没有被消耗殆尽，我来告诉你一个好消息：
vim 共有 &lt;a href="https://en.wikipedia.org/wiki/Vim_(text_editor)">12种模式&lt;/a>。&lt;/p>
&lt;p>这确实是个新世界。&lt;/p>
&lt;h2 id="vimrc" >
&lt;div>
&lt;a href="#vimrc">
#
&lt;/a>
vimrc
&lt;/div>
&lt;/h2>
&lt;p>应当注意：从第一次在终端输入 &lt;code>vim&lt;/code> 到开始了解和使用自己配置的 &lt;code>.vimrc&lt;/code>，
从前者到后者，每个人所经历的时间不太一样，毕竟每个人的生活和目的千差万别。
（倒不是说，刚开始使用 vim 就不能直接上手个人配置，而是想说明，
“步子迈大了，容易扯着蛋”；一旦放弃了探索和思考，容易一碰挫折就十分沮丧。）
但在很多文章里，这两者之间多半就是一个空行的距离。
（因此我决定在这个空行之前添加一点说明，以下的内容新手初看时不太明白实属正常）&lt;/p>
&lt;p>Vim 如此受欢迎，它的丰富的插件生态应该是一个重要的原因。为什么有这么多插件呢？
因为有这么多的需求。因为有那么多的插件，所以有了要管理插件（更新、删除等）的
插件。使用比较广泛的有：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/VundleVim/Vundle.vim">Vundle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/tpope/vim-pathogen">Pathogen&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/k-takata/minpac">minpac&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>它们的安装和使用条件都在各自的主页有详细说明，这里不再搬运。那到底用哪个呢？
你在阅读他们的说明的时候自己就会有答案，如果还是难以决定，我的建议就是像八戒
所说的那样：“待俺老猪一家家吃将去！”。（我自己嘛，吃过了三家）&lt;/p>
&lt;p>从 vim8.0 开始，vim 自带插件管理的功能特性（实际上，前述的 &lt;code>minpac&lt;/code> 就利用了
这些特性），我仅在这个功能出来的时候尝过新（满足好奇心而已，浅尝辄止），
因为已经习惯了所用的管理插件的插件：）(更新：后来我改变了主意)&lt;/p>
&lt;p>如果说管理插件的插件可以由 vim 自带的功能所提供，那么，有多少插件是必须的呢？&lt;/p>
&lt;p>有人作了很好的总结：
&lt;a href="https://thoughtbot.com/blog/how-to-do-90-of-what-plugins-do-with-just-vim">How to Do 90% of What Plugins Do (With Just Vim)&lt;/a>&lt;/p>
&lt;p>如果你崇尚极简主义，值得一试。（不是说就一定要如此，而是知道有的选择）&lt;/p>
&lt;p>这里提到的应该都理解为是“别人的”个人配置，而所谓“个人配置”，基本意思就是：
走过路过，可以随便错过。
看到钟意的，拿走不谢。看到不爽的，请去Pull Request，切勿乱喷粪。&lt;/p>
&lt;p>大佬&lt;a href="https://en.wikipedia.org/wiki/Linus_Torvalds">林纳斯·托瓦兹&lt;/a>早就看透了那些到处乱喷的键盘侠，他的至理名言说明了一切：&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;On the Internet, talk is cheap, show me the code.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;h2 id="vimrc-vimrc" >
&lt;div>
&lt;a href="#vimrc-vimrc">
#
&lt;/a>
vimrc (~/.vimrc)
&lt;/div>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34; ================================Part-1: Plugins============&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>call plug#begin(&lt;span style="color:#5af78e">&amp;#39;~/.vim/bundle&amp;#39;&lt;/span>) &lt;span style="color:#78787e">&amp;#34; reuse the bundle dir&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== tmux ===-------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;christoomey/vim-tmux-navigator&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; vim &amp;lt;-&amp;gt; tmux, pane dance&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;edkolev/tmuxline.vim&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; status line&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Coding enhancement ===-------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;airblade/vim-gitgutter&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; shows git diff sign and more&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;tpope/vim-fugitive&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; awsome git wrapper!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;tpope/vim-repeat&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; enhance . repeat&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;dense-analysis/ale&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; linters config&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;mileszs/ack.vim&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; cherrypick your strings&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;junegunn/fzf&amp;#39;&lt;/span>, { &lt;span style="color:#5af78e">&amp;#39;do&amp;#39;&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;./install --all&amp;#39;&lt;/span> } | Plug &lt;span style="color:#5af78e">&amp;#39;junegunn/fzf.vim&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Python enhancement ===-------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; Plug &amp;#39;Valloric/YouCompleteMe&amp;#39; &amp;#34; for completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;davidhalter/jedi-vim&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; python auto-completion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Wiki/markdown enhancement ===-------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;vimwiki/vimwiki&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; for personal wiki&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;mzlogin/vim-markdown-toc&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; for table_of_content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;plasticboy/vim-markdown&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; couple with vim-instant-markdown&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;instant-markdown/vim-instant-markdown&amp;#39;&lt;/span>, {&lt;span style="color:#5af78e">&amp;#39;for&amp;#39;&lt;/span>: [&lt;span style="color:#5af78e">&amp;#39;markdown&amp;#39;&lt;/span>, &lt;span style="color:#5af78e">&amp;#39;markdown.pandoc&amp;#39;&lt;/span>]}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Latex support ===-------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;lervag/vimtex&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; for LaTeX files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;xuhdev/vim-latex-live-preview&amp;#39;&lt;/span>, { &lt;span style="color:#5af78e">&amp;#39;for&amp;#39;&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;tex&amp;#39;&lt;/span> } &lt;span style="color:#78787e">&amp;#34; Lively Previewing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Julia lang ===-------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;JuliaEditorSupport/julia-vim&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== for GnuPG ===-----------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;jamessan/vim-gnupg&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; transparent editting .gpg files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== Code/Project navigation ===-------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;easymotion/vim-easymotion&amp;#39;&lt;/span> &lt;span style="color:#78787e">&amp;#34; quickly move&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;preservim/nerdtree&amp;#39;&lt;/span>, { &lt;span style="color:#5af78e">&amp;#39;on&amp;#39;&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;NERDTreeToggle&amp;#39;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34;-------------------=== local plugins (manually install and update) ===-----&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&amp;#34; &amp;#34; 中文跳转 (easymotion-like)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;~/.vim/bundle/vim-PinyinSearch&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>call plug#end() &lt;span style="color:#78787e">&amp;#34; required&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装和使用 vim-plug 的步骤：&lt;/p>
&lt;ol>
&lt;li>下载并保存到 &lt;code>~/.vim/autoload/&lt;/code> 目录下 （在终端操作）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>curl -fLo ~/.vim/autoload/plug.vim --create-dirs &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>配置 &lt;code>~/.vimrc&lt;/code> 文件的相应内容（必须遵循的格式）：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>call plug#begin&lt;span style="color:#ff6ac1">(&lt;/span>&lt;span style="color:#5af78e">&amp;#39;~/.vim/bundle&amp;#39;&lt;/span>&lt;span style="color:#ff6ac1">)&lt;/span> &lt;span style="color:#5af78e">&amp;#34; reuse the bundle dir
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">Plug &amp;#39;tpope/vim-fugitive&amp;#39; &amp;#34;&lt;/span> awsome git wrapper!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>call plug#end&lt;span style="color:#ff6ac1">()&lt;/span> &lt;span style="color:#5af78e">&amp;#34; required
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在 &lt;code>plug#begin()&lt;/code> 和 &lt;code>plug#end()&lt;/code> 之间就是你想要安装和管理的插件的列表。
&lt;code>Plug 'tpope/vim-fugitive'&lt;/code> 就是指明想要安装并管理 vim-fugitive 这个插件。&lt;/p>
&lt;p>如果 &lt;code>plug#begin()&lt;/code> 括弧里为空，则默认是奖所有的插件安装到 &lt;code>.vim/plugged/&lt;/code>，
上文的我的配置中，我是指定了 &lt;code>.vim/bundle&lt;/code> 作为插件的目录
（因为我在使用 vim-plug 之前就已经在这个目录下存放了许多插件，简单复用而已）。&lt;/p>
&lt;p>vim-plug 会自动执行以下两个命令（许多插件需要这两个设定）：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>filetype indent on&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>syntax enable&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>如果你发现自己“完全”按照官方的指南进行安装，可是“插件死活不起作用”，极有可能是
因为你在某个地方设置了完全相反的设定（因为从别的地方 copy 一大段自己没有认真看
过的内容到自己的 .vimrc 文件里）。&lt;/p>
&lt;hr>
&lt;p>更详细的使用方法应该直接去 &lt;a href="https://github.com/junegunn/vim-plug">vim-plug&lt;/a>
的主页了解，那里不仅告诉大家应该怎么安装此插件，还给出各种情况的说明和例子。&lt;/p>
&lt;hr></description></item></channel></rss>