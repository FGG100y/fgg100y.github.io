<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tmux on fgg blog</title><link>https://fgg100y.github.io/tags/tmux/</link><description>fgg blog (Tmux)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 07 Aug 2022 21:17:59 +0800</lastBuildDate><atom:link href="https://fgg100y.github.io/tags/tmux/index.xml" rel="self" type="application/rss+xml"/><item><title>利器1: Oh, My Tmux -- 键盘驱动(为主)的工作流</title><link>https://fgg100y.github.io/posts/thecli/2022-08-07-tmux/</link><pubDate>Sun, 07 Aug 2022 21:17:59 +0800</pubDate><guid>https://fgg100y.github.io/posts/thecli/2022-08-07-tmux/</guid><description>&lt;h2 id="tmuxhttpsgithubcomtmuxtmux" >
&lt;div>
&lt;a href="#tmuxhttpsgithubcomtmuxtmux">
#
&lt;/a>
&lt;a href="https://github.com/tmux/tmux">Tmux&lt;/a>
&lt;/div>
&lt;/h2>&lt;p>&lt;a href="https://github.com/tmux/tmux">Tmux&lt;/a> 是一个终端多路复用器&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>：&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>Tmux is a terminal multiplexer: it enables a number of terminals to be
created, accessed, and controlled from a single screen. tmux may be detached
from a screen and continue running in the background, then later reattached.&lt;/p>
&lt;/blockquote>
&lt;p>那到底什么是&lt;ruby>“终端”&lt;rt>terminal&lt;/rt>&lt;/ruby>？&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> 我回答不了这个问题，但我发现了一个很好的解释 &amp;ndash;
&lt;a href="https://unix.stackexchange.com/questions/4126/what-is-the-exact-difference-between-a-terminal-a-shell-a-tty-and-a-con">terminal&lt;/a>&lt;/p>
&lt;p>突然想起《统计学》关于“卡方检验”那一章的经典导语：&lt;/p>
&lt;blockquote>
&lt;p>不要问它的含义，宁可问如何使用它。&amp;ndash; 维特根斯坦&lt;/p>
&lt;/blockquote>
&lt;p>本着“拿来主义”精神，那就来粗略看看 Tmux 能如何使用吧：&lt;/p>
&lt;p>&lt;img alt="IMG_MyTmux &amp;ndash; (gif 失效)" src="https://fgg100y.github.io/img/posts/tmux/ssr_myTmuxDemo.gif">&lt;/p>
&lt;ol>
&lt;li>
&lt;p>启动 Termainal (CTRL+Enter, 这是个人定义的快捷键)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动 Tmux 进入我的工作环境 (须知：我这里展示的不是初始化的 Tmux 启动)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>检查一下昨天写的博客写到哪里了 (貌似差不多了，写其他内容)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>切换到下一场“会话”(session) &amp;ndash; vimwiki (这里是我个人项目根目录)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>按进度今天应该介绍一下 Tmux 这个工具 (然后，就到这里了)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>现在阳光明媚（过一会儿就变毒辣），白天还是换到白色背景合适些&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;del>搬砖滴干活咯各位&lt;/del>&lt;br>
&lt;del>嗯，干活？更像是创作&lt;/del>&lt;br>
&lt;del>创作？这算哪门子的&amp;hellip;&lt;/del>&lt;br>
所以还是，干点活吧 ：）&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="tmux-的一些关键配置" >
&lt;div>
&lt;a href="#tmux-%e7%9a%84%e4%b8%80%e4%ba%9b%e5%85%b3%e9%94%ae%e9%85%8d%e7%bd%ae">
#
&lt;/a>
Tmux 的一些关键配置
&lt;/div>
&lt;/h2>&lt;p>如果还没有安装 Tmux，命令行中安装起来也不费事 (Debian系列)：&lt;code>apt install tmux&lt;/code>&lt;/p>
&lt;p>以下的内容均围绕 &lt;code>~/.tmux.conf&lt;/code> 文件展开。如果没有就自己创建一个这文件。
默认这些代码框里的内容（等宽字体那些）是要添加到 &lt;code>~/.tmux.conf&lt;/code> 文件里。&lt;/p>
&lt;p>&amp;ldquo;#&amp;rdquo; 开头的语句是注释说明&lt;br>
&amp;ldquo;$&amp;rdquo; 开头的语句是要在命令行运行的命令&lt;br>
&amp;ldquo;:command&amp;rdquo; 以“冒号接命令名”开头的语句是要在vim命令模式运行的命令&lt;/p>
&lt;h2 id="默认快捷键修改-ctrl-b---ctrl-a" >
&lt;div>
&lt;a href="#%e9%bb%98%e8%ae%a4%e5%bf%ab%e6%8d%b7%e9%94%ae%e4%bf%ae%e6%94%b9-ctrl-b---ctrl-a">
#
&lt;/a>
默认快捷键修改: Ctrl-b -&amp;gt; Ctrl-a
&lt;/div>
&lt;/h2>&lt;p>Tmux 的默认快捷键是 &lt;code>ctrl-b&lt;/code>，这在键盘上距离略微有点远 (对于我的短手指来说)，
因此我把它修改为 &lt;code>ctrl-a&lt;/code> 组合键。&lt;/p>
&lt;p>将下面语句加入 .tmux.conf 文件：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">set&lt;/span> -g prefix C-a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># # unbind the C-b&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>unbind C-b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># # ensure that we can send Ctrl-a to other apps (e.g., vim)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">bind&lt;/span> C-a send-prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># # setting the delay between prefix and command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">set&lt;/span> -s escape-time &lt;span style="color:#ff9f43">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>既然是要用快捷键，那么重新加载 .tmux.conf 文件的自然也安排上：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># reload the .tmux.conf file with Prefix-r&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">bind&lt;/span> r source-file ~/.tmux.conf &lt;span style="color:#5af78e">\;&lt;/span> display &lt;span style="color:#5af78e">&amp;#34;tmuxconf reloaded!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后，在命令行直接输入快捷组合键：&lt;code>Ctrl+a+r&lt;/code> 即可使配置生效 (&lt;code>+&lt;/code>号的意思是同时摁下)。&lt;/p>
&lt;h2 id="vimtmux-强强组合" >
&lt;div>
&lt;a href="#vimtmux-%e5%bc%ba%e5%bc%ba%e7%bb%84%e5%90%88">
#
&lt;/a>
vim/tmux 强强组合
&lt;/div>
&lt;/h2>&lt;p>Tmux 支持多个终端窗格 (terminal panes)，每个窗格都是独立的终端，
因此，最明显的事情就是，你可以同时在一块屏幕上“监控”多个不同任务，意思是，
这些不同的任务在视觉上是“同时”呈现的（相对于重叠的 标签页(tab) 而言）。&lt;/p>
&lt;p>如果你恰好也喜欢用 vim 进行码字，也打开了 vim 编辑器 (vim 本身也有窗格功能)，
自然而然的，你肯定想以相同的快捷键来实现不同的 vim/tmux 窗格之间的切换。&lt;/p>
&lt;p>幸运的是，已经有人实现了这样的功能，并共享了，这就是
&lt;a href="https://github.com/christoomey/vim-tmux-navigator">vim-tmux-navigator&lt;/a>.&lt;/p>
&lt;p>vim 有丰富的插件生态，这是 vim 强大生命力的一个体现。
这么好的模式，自然值得借鉴。因此，tmux 也有一个用来管理插件的
&lt;a href="https://github.com/tmux-plugins/tpm">tpm&lt;/a>.&lt;/p>
&lt;p>需要在 vim 和 tmux 两个方面进行配置：&lt;/p>
&lt;ol>
&lt;li>在 vim 方面, 将以下语句加入 .vimrc 文件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 如果你用的是 Vim-Plug 插件管理器的话&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Plug &lt;span style="color:#5af78e">&amp;#39;christoomey/vim-tmux-navigator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后运行 &lt;code>:PlugInstall&lt;/code> 来安装这个插件。&lt;/p>
&lt;p>如果你是第一次配置 vim 插件，先去了解
&lt;a href="https://github.com/junegunn/vim-plug">Vim-Plug&lt;/a>.&lt;/p>
&lt;ol start="2">
&lt;li>在 tmux 方面，将下面语句加入 .tmux.conf 文件：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># tpm is a tmux-plugin manager. [details in its github repos]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">set&lt;/span> -g @plugin &lt;span style="color:#5af78e">&amp;#39;tmux-plugins/tpm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># vim-tmux-navigator: Seamless navigation between tmux panes and vim splits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">set&lt;/span> -g @plugin &lt;span style="color:#5af78e">&amp;#39;christoomey/vim-tmux-navigator&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># put this &amp;#39;run&amp;#39; command to the very end of .tmux.conf, says the tpm&amp;#39;s readme&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>run &lt;span style="color:#5af78e">&amp;#39;~/.tmux/plugins/tpm/tpm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>加入这些内容之后，重新加载 tmux 环境, (在已经启动tmux的命令行运行以下命令)：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ tmux &lt;span style="color:#ff5c57">source&lt;/span> ~/.tmux.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="主题背景颜色切换" >
&lt;div>
&lt;a href="#%e4%b8%bb%e9%a2%98%e8%83%8c%e6%99%af%e9%a2%9c%e8%89%b2%e5%88%87%e6%8d%a2">
#
&lt;/a>
主题背景颜色切换
&lt;/div>
&lt;/h2>&lt;p>在我的印象里，感觉黑色/暗色系一下子成了很多应用软件的默认背景色，
我在命令行过活很多年了，对此很是习惯，个人很少看到谁的Terminal是白色背景的。
主要应该是：1）配置了白天黑夜都友好的主题；2）不当回事儿。
但有时候，特别是光线充足的时候，我比较喜欢白色的背景。
所以，我需要能随心所欲切换背景色调。&lt;/p>
&lt;p>这个貌似没法不依赖于外部脚本来实现，至少我没有发现可行的办法。因此，你也需要
&lt;a href="https://www.seanh.cc/2021/01/02/change-between-light-and-dark-themes-in-tmux/">去下载这个脚本&lt;/a>&lt;/p>
&lt;p>Linux 环境氛围是这样的，不要盲目相信别人写的脚本，特别是那些你不认识的人。
相信开源和相信陌生人，毕竟不是同一件事。
意思就是，你在使用这些脚本之前好歹也要看看人家到底写了什么吧。
特别是这种都不超过一页内容的脚本。&lt;/p>
&lt;p>什么？你说你看不懂。事实是，没有人在一开始就什么都看得懂。比如说，
你看到脚本里有这么一句类似于windows上“清理垃圾”的命令： &lt;code>sudo rm -rf /*&lt;/code>，
那你就要保持警惕了。
据说，有些系统会阻止你这么干，但有些系统会“开心地”执行你的旨意；
反正我没试过，我也没有以任何方式暗示或鼓励你要这么清理系统垃圾。&lt;/p>
&lt;p>如果说你下载了那个脚本，放到你喜欢它待的位置，比如说， &lt;code>~/.tmux/bin/&lt;/code>，
然后将下面这条语句加入 &lt;code>~/.tmux.conf&lt;/code> 文件中。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">bind&lt;/span> T run-shell ~/.tmux/bin/toggle-theme
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="关于配置和插件以及管理插件的插件" >
&lt;div>
&lt;a href="#%e5%85%b3%e4%ba%8e%e9%85%8d%e7%bd%ae%e5%92%8c%e6%8f%92%e4%bb%b6%e4%bb%a5%e5%8f%8a%e7%ae%a1%e7%90%86%e6%8f%92%e4%bb%b6%e7%9a%84%e6%8f%92%e4%bb%b6">
#
&lt;/a>
关于配置和插件以及管理插件的插件
&lt;/div>
&lt;/h2>&lt;p>以上内容分别对应着：&lt;/p>
&lt;p>1）直接对 tmux 进行基本配置；&lt;/p>
&lt;p>2）使用 tmux 插件管理器对 tmux 进行配置；&lt;/p>
&lt;p>3）借用 脚本程序 对 tmux 进行配置。&lt;/p>
&lt;p>毕竟，不是每个人都热衷于使用插件管理器，插件和主件之间的交互方式并不设限。你可以选择使用你觉得合适的方法来完成任务。
要是觉得现有的都不满意，无法满足你的特殊需求，手痒痒的，那就自己搞一个。
很多优秀的软件都是如此，它提供足够好的默认值，但也提供足够多的灵活性，让用户有的选。&lt;/p>
&lt;p>刘建明说“以前没的选，现在想选回做好人，给个机会”，陈永仁答“去同法官讲”。“有的选”这一点十分可贵。&lt;/p>
&lt;hr>
&lt;p>Last update: 2024-07-04&lt;/p>
&lt;blockquote>
&lt;p>USER: Tmux 是什么？
GPT4o: Tmux 是一个终端多路复用器 (terminal multiplexer)，允许用户在一个终端窗口内运行和管理多
个终端会话。它提供了一种方便的方法来分割一个物理终端窗口成多个虚拟终端，并在这些虚拟终端
之间自由切换。Tmux 的主要功能包括：&lt;/p>
&lt;ul>
&lt;li>会话管理：Tmux 可以创建、分离和重新附加会话，使用户可以在不同的终端会话之间快速切换。&lt;/li>
&lt;li>窗口分割：用户可以在一个Tmux会话中将窗口分割成多个窗格，每个窗格可以独立运行一个命令行程序。&lt;/li>
&lt;li>持久性：即使终端窗口关闭，Tmux 会话仍然会保持运行，这样用户可以稍后重新附加会话，继续工作。&lt;/li>
&lt;li>可定制性：Tmux 提供了丰富的配置选项和快捷键，用户可以根据自己的需求进行定制。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>而如今，或许应该问问GPT4o&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>想知道怎么像这样标注名词吗？去看看&lt;a href="https://www.junyi.dev/posts/a-writing-trick/">这篇博文&lt;/a>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>